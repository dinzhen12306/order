// Code generated by goctl. DO NOT EDIT.
// Source: order.proto

package server

import (
	"context"

	"order/internal/logic"
	"order/internal/svc"
	"order/order"
)

type OrderServer struct {
	svcCtx *svc.ServiceContext
	order.UnimplementedOrderServer
}

func NewOrderServer(svcCtx *svc.ServiceContext) *OrderServer {
	return &OrderServer{
		svcCtx: svcCtx,
	}
}

func (s *OrderServer) CreateOrder(ctx context.Context, in *order.CreateOrderReq) (*order.CreateOrderResp, error) {
	l := logic.NewCreateOrderLogic(ctx, s.svcCtx)
	return l.CreateOrder(in)
}

func (s *OrderServer) CreateOrderProduct(ctx context.Context, in *order.CreateOrderProductReq) (*order.CreateOrderProductResp, error) {
	l := logic.NewCreateOrderProductLogic(ctx, s.svcCtx)
	return l.CreateOrderProduct(in)
}

func (s *OrderServer) UpdateOrder(ctx context.Context, in *order.UpdateOrderReq) (*order.UpdateOrderResp, error) {
	l := logic.NewUpdateOrderLogic(ctx, s.svcCtx)
	return l.UpdateOrder(in)
}

func (s *OrderServer) UpdateOrderByOrderNO(ctx context.Context, in *order.UpdateOrderByOrderNOReq) (*order.UpdateOrderByOrderNOResp, error) {
	l := logic.NewUpdateOrderByOrderNOLogic(ctx, s.svcCtx)
	return l.UpdateOrderByOrderNO(in)
}

func (s *OrderServer) GetOrder(ctx context.Context, in *order.GetOrderReq) (*order.GetOrderResp, error) {
	l := logic.NewGetOrderLogic(ctx, s.svcCtx)
	return l.GetOrder(in)
}

func (s *OrderServer) GetOrders(ctx context.Context, in *order.GetOrdersReq) (*order.GetOrdersResp, error) {
	l := logic.NewGetOrdersLogic(ctx, s.svcCtx)
	return l.GetOrders(in)
}
